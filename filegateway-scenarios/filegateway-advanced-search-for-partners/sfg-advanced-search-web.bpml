<process name = "SFGAdvancedSearchWeb"> 

    <rule name="partner_name">
        <condition>string-length(/ProcessData/partnerName) &gt; 0</condition>
    </rule>

    <rule name="partner_code">
        <condition>string-length(/ProcessData/partnerCode) &gt; 0</condition>
    </rule>

    <rule name="login_id">
        <condition>string-length(/ProcessData/loginId) &gt; 0</condition>
    </rule>

    <rule name="first_name">
        <condition>string-length(/ProcessData/firstName) &gt; 0</condition>
    </rule>

    <rule name="last_name">
        <condition>string-length(/ProcessData/lastName) &gt; 0</condition>
    </rule>

    <rule name="first_name_last_name">
        <condition>string-length(/ProcessData/firstName) &gt; 0 and string-length(/ProcessData/lastName) &gt; 0</condition>
    </rule>

    <rule name="no_parameters">
        <condition>string-length(/ProcessData/partnerName) = 0 and
        string-length(/ProcessData/partnerCode) = 0 and
        string-length(/ProcessData/loginId) = 0 and
        string-length(/ProcessData/firstName) = 0 and
        string-length(/ProcessData/lastName) = 0</condition>
    </rule>

    <rule name="is_new_page">
        <condition>string(/ProcessData/ResponseData/newpage) = "Is New Page"</condition>
    </rule>

    <rule name="has_results">
        <condition>count(/ProcessData/Result1/Row1) &gt; 0</condition>
    </rule>


    <sequence>
    <choice>
        <select>
            <case ref="partner_name" activity="PartnerName" />
            <case ref="partner_code" activity="PartnerCode" />
            <case ref="login_id" activity="LoginID" />
            <case ref="first_name_last_name" activity="FirstNameLastName" />
            <case ref="first_name" activity="FirstName" />
            <case ref="last_name" activity="LastName" />
            <case ref="no_parameters" activity="NoParams" />
        </select>
        
<!-- 
    select O.ORGANIZATION_NAME,O.ORGANIZATION_KEY,U.LOGINID,P.FIRST_NAME,P.LAST_NAME
    from YFS_ORGANIZATION as O, YFS_USER as U, YFS_PERSON_INFO as P
    where 
        O.ORGANIZATION_KEY = U.ORGANIZATION_KEY and U.BILLINGADDRESS_KEY = P.PERSON_INFO_KEY and
-->

        <sequence name="PartnerName">
            <assign to="This/sql" from="concat(&quot;select O.ORGANIZATION_NAME,TRIM(O.ORGANIZATION_KEY) as OKEY,TRIM(U.LOGINID) as LOGIN,P.FIRST_NAME,P.LAST_NAME from YFS_ORGANIZATION O, YFS_USER U, YFS_PERSON_INFO P where O.ORGANIZATION_KEY = U.ORGANIZATION_KEY and U.BILLINGADDRESS_KEY = P.PERSON_INFO_KEY and O.ORGANIZATION_NAME=&apos;&quot;,/ProcessData/partnerName/text(),&quot;&apos;&quot;)"></assign>
        </sequence>

        <sequence name="PartnerCode">
            <assign to="This/sql" from="concat(&quot;select O.ORGANIZATION_NAME,TRIM(O.ORGANIZATION_KEY) as OKEY,TRIM(U.LOGINID) as LOGIN,P.FIRST_NAME,P.LAST_NAME from YFS_ORGANIZATION O, YFS_USER U, YFS_PERSON_INFO P where O.ORGANIZATION_KEY = U.ORGANIZATION_KEY and U.BILLINGADDRESS_KEY = P.PERSON_INFO_KEY and O.ORGANIZATION_KEY=&apos;&quot;,/ProcessData/partnerCode/text(),&quot;&apos;&quot;)"></assign>
        </sequence>

        <sequence name="LoginID">
            <assign to="This/sql" from="concat(&quot;select O.ORGANIZATION_NAME,TRIM(O.ORGANIZATION_KEY) as OKEY,TRIM(U.LOGINID) as LOGIN,P.FIRST_NAME,P.LAST_NAME from YFS_ORGANIZATION O, YFS_USER U, YFS_PERSON_INFO P where O.ORGANIZATION_KEY = U.ORGANIZATION_KEY and U.BILLINGADDRESS_KEY = P.PERSON_INFO_KEY and U.LOGINID=&apos;&quot;,/ProcessData/loginId/text(),&quot;&apos;&quot;)"></assign>
        </sequence>

        <sequence name="FirstNameLastName">
            <assign to="This/sql" from="concat(&quot;select O.ORGANIZATION_NAME,TRIM(O.ORGANIZATION_KEY) as OKEY,TRIM(U.LOGINID) as LOGIN,P.FIRST_NAME,P.LAST_NAME from YFS_ORGANIZATION O, YFS_USER U, YFS_PERSON_INFO P where O.ORGANIZATION_KEY = U.ORGANIZATION_KEY and U.BILLINGADDRESS_KEY = P.PERSON_INFO_KEY and P.FIRST_NAME like &apos;%&quot;,/ProcessData/firstName/text(),&quot;%&apos; and LOWER(P.LAST_NAME) like LOWER(&apos;%&quot;,/ProcessData/lastName/text(),&quot;%&apos;)&quot;)"></assign>
        </sequence>

        <sequence name="FirstName">
            <assign to="This/sql" from="concat(&quot;select O.ORGANIZATION_NAME,TRIM(O.ORGANIZATION_KEY) as OKEY,TRIM(U.LOGINID) as LOGIN,P.FIRST_NAME,P.LAST_NAME from YFS_ORGANIZATION O, YFS_USER U, YFS_PERSON_INFO P where O.ORGANIZATION_KEY = U.ORGANIZATION_KEY and U.BILLINGADDRESS_KEY = P.PERSON_INFO_KEY and LOWER(P.FIRST_NAME) like LOWER(&apos;%&quot;,/ProcessData/firstName/text(),&quot;%&apos;)&quot;)"></assign>
        </sequence>

        <sequence name="LastName">
            <assign to="This/sql" from="concat(&quot;select O.ORGANIZATION_NAME,TRIM(O.ORGANIZATION_KEY) as OKEY,TRIM(U.LOGINID) as LOGIN,P.FIRST_NAME,P.LAST_NAME from YFS_ORGANIZATION O, YFS_USER U, YFS_PERSON_INFO P where O.ORGANIZATION_KEY = U.ORGANIZATION_KEY and U.BILLINGADDRESS_KEY = P.PERSON_INFO_KEY and LOWER(P.LAST_NAME) like LOWER(&apos;%&quot;,/ProcessData/lastName/text(),&quot;%&apos;)&quot;)"></assign>
        </sequence>

        <sequence name="NoParams">
            <assign to="/ProcessData/ResponseData/newpage">Is New Page</assign>
        </sequence>
    </choice>          

    <choice>
        <select>
            <case ref="is_new_page" negative="true" activity="QueryData" />
            <case ref="is_new_page" activity="NewPage" />     
        </select> 

        <sequence name="QueryData">
            <operation name="Lightweight JDBC Adapter">
                <participant name="LightweightJDBCAdapterQuery" />
                <output message="LightweightJDBCAdapterTypeInputMessage">
                    <assign to="." from="*"></assign>
                    <assign to="pool">db2Pool</assign>
                    <assign to="query_type">SELECT</assign>
                    <assign to="result_name">Result1</assign>
                    <assign to="row_name">Row1</assign>
                    <assign to="sql" from="/ProcessData/This/sql/text()"></assign>
                </output>
                <input message="inmsg">
                <assign to="." from="DocToDOM(PrimaryDocument)"></assign>
                </input>
            </operation>
        </sequence>

        <sequence name="NewPage">
            <assign to="/ProcessData/ResponseData/newpage">Is New Page</assign>
        </sequence>
    </choice>   
    
    <choice>
        <select>
            <case ref="is_new_page" activity="OutputNewPage" />
            <case ref="has_results" activity="OutputData" />
            <case ref="has_results" negative="true" activity="OutputNoResults" />
        </select>
        
        <sequence name="OutputNewPage">
            <assign to="/ProcessData/ResponseData/newpage">Is New Page</assign>
        </sequence>

        <sequence name="OutputData">
            <assign to="/ProcessData/ResponseData/data" from="/ProcessData/Result1/Row1"></assign>
        </sequence>

        <sequence name="OutputNoResults">
            <assign to="/ProcessData/ResponseData/noresult">No Results</assign>
        </sequence>
    </choice>   

    <operation name="XSLT Service">
      <participant name="XSLTService"/>
      <output message="XSLTServiceTypeInputMessage">
        <assign to="input_pd_xpath">/ProcessData/ResponseData</assign>
        <assign to="xml_input_from">ProcData</assign>
        <assign to="xml_input_validation">NO</assign>
        <assign to="xslt_name">SFGAdvancedSearch</assign>
        <assign to="." from="*"></assign>
      </output>
      <input message="inmsg">
        <assign to="." from="*"></assign>
      </input>
    </operation>
  
    <operation name="HttpRespond">
      <participant name="HttpRespond"/>
      <output message="HttpRespondInputMessage">
        <assign to="doc-has-headers">false</assign> <!-- Implying non-raw mode by default. --> 
        <assign to="." from="*"></assign>
      </output>
      <input message="inmsg">
        <assign to="." from="*"></assign>
      </input>
    </operation>

  </sequence>
</process>
